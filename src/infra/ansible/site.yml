---
- hosts: all
  user: "{{ deploy_user }}"
  become: yes
  tags: provision
  tasks:

  - name: Install packages
    apt:
      name: "{{ default_packages }}"

  - name: insert hosts entry
    lineinfile:
      path: /etc/hosts
      line: "{{ item }}"
    with_items: "{{ hosts }}"

- hosts: doodle_api
  user: "{{ deploy_user }}"
  become: yes
  tags: provision
  tasks:

  - name: Add GPG key
    apt_key:
      id: "7F0CEB10"
      keyserver: "keyserver.ubuntu.com"

  - name: Configure APT repository
    apt_repository:
      repo: "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse"
      update_cache: true

  - name: Install packages
    apt:
      name: mongodb

- hosts: vagrant
  user: "{{ deploy_user }}"
  become: yes
  tags: deploy
  tasks:

  - name: Clone the Repo
    git: clone=yes repo="{{ repo }}" dest="{{ install_path }}" version="{{ repo_version }}" update="{{ update_repo }}"

- hosts: prod, staging
  user: "{{ deploy_user }}"
  become: yes
  tags: deploy
  tasks:

  - name: create application directory
    file:
      path: "{{ install_path }}/src"
      state: directory
      user: "{{ deploy_user }}"

  - name: Deploy
    unarchive:
      src: "{{ artifactory_build_url }}"
      dest: "{{ install_path }}"
      remote_src: yes
    notify:
    - restart application

  handlers:
    - name: restart application
      service: name=doodle state=restarted

- hosts: all
  user: "{{ deploy_user }}"
  become: yes
  tags: deploy
  tasks:

  - name: Create a virtual environment
    command: python3.5 -m venv "{{ install_path }}"/env creates="{{ install_path }}/env"

  - name: install requirements
    pip:
      requirements: "{{ requirements_path }}"
      virtualenv: "{{ install_path }}/env"

- hosts: doodle_web
  user: "{{ deploy_user }}"
  become: yes
  tags: deploy
  tasks:

  - name: Copy systemd script
    template: src=systemd_config_web dest=/lib/systemd/system/doodle.service

  - name: Start API
    service: name=doodle state=started enabled=yes

- hosts: doodle_api
  user: "{{ deploy_user }}"
  become: yes
  tags: deploy
  tasks:

  - name: Copy systemd script
    template: src=systemd_config_api dest=/lib/systemd/system/doodle.service

  - name: Start API
    service: name=doodle state=started enabled=yes
