pipeline {
  agent any
	parameters {
			  string(defaultValue: '', description: '', name: 'DOODLE_BUILD_JOB_BUILD_NUMBER')
	}
  stages {
    stage('GitHub Pull') {
      steps {
        sh 'echo "*************************GitHub Pull*************************"'
        script {
          checkout([$class: 'GitSCM',
            branches: [[name: '*/master']],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "rlennon/doodle/src"]],
            submoduleCfg: [],
            userRemoteConfigs: [[url: 'git@github.com:rlennon/doodle']]
          ])
        }
      }
    }
		stage('Deploy to Staging') {
  		steps {
			  sh 'echo "*************************Deploy Staging*************************"'
        sh 'ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook --tags=deploy --extra-vars "artifactory_build_url=${ARTIFACTORY_SERVER}:${ARTIFACTORY_PORT}/artifactory/doodle-release-local/com/doodle/build/doodle_build-${DOODLE_BUILD_JOB_BUILD_NUMBER}/doodle_build-${DOODLE_BUILD_JOB_BUILD_NUMBER}.tar" -u doodle -i ~/hosts-staging.ini ${WORKSPACE}/src/infra/ansible/site.yml'
      }
		}
  	stage('Deployment Validation Test') {
  		steps {
			  sh 'echo "*************************Smoke Test*************************"'
 		  }
	  }
		stage('Security Test Placeholder') {
  		steps {
			  sh 'echo "*************************Security Test Placeholder*************************"'
 		  }
	  }
  }
	post {
		success {
			build job: 'Deploy_Production', parameters: [string(name: 'DOODLE_BUILD_JOB_BUILD_NUMBER', value: "${BUILD_NUMBER}")], wait: false
		}
		always {
			cleanWs()
		}
	}
}
