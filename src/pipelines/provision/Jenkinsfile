pipeline {
  agent any
  stages {
    stage('GitHub Pull') {
	  	steps {
		  	sh 'echo "*************************GitHub Pull*************************"'
        script {
          checkout([$class: 'GitSCM',
            branches: [[name: '*/master']],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "rlennon/doodle/src/infra/ansible"]],
            submoduleCfg: [],
            userRemoteConfigs: [[url: 'git@github.com:rlennon/doodle']]
          ])
        }
			}
	  }
    stage('Ansible linting') {
    	steps {
      	  sh 'echo "*************************Ansible Linting*************************"'
          sh 'ansible-lint ${WORKSPACE}/src/infra/ansible/site.yml'
    	  }
    }
    stage('Ansible Provision: Staging') {
      steps {
        sh 'echo "*************************Ansible Provision: Staging*************************"'
        sh 'ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook --tags=provision -u doodle -i ~/hosts-staging.ini ${WORKSPACE}/src/infra/ansible/site.yml'
      }
    }
    stage('Ansible Provision: Production') {
      steps {
        sh 'echo "*************************Ansible Provision: Production*************************"'
        sh 'ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook --tags=provision -u doodle -i ~/hosts-prod.ini ${WORKSPACE}/src/infra/ansible/site.yml'
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
